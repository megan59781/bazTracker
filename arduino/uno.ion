#include <SoftwareSerial.h>
#include <ArduinoJson.h>
#include <Servo.h>
#include <SPI.h>
#include <MFRC522.h>
#include <RTClib.h>

// Initialise Arduino to NodeMCU (5=Rx & 6=Tx)
SoftwareSerial nodemcu(5, 6);

// Water Sensor
#define WATER_SENSOR_PIN A0

// RFID Pins
#define SS_PIN 10
#define RST_PIN 9

// Barry Tag
#define BAZ_TAG "27 34 D2 2D"

Servo myservo;

RTC_DS1307 rtc;

int pos = 0;


MFRC522 mfrc522(SS_PIN, RST_PIN);

void setup() {
  Serial.begin(9600);

  // SETUP RTC MODULE
  if (! rtc.begin()) {
    Serial.println("Couldn't find RTC");
    Serial.flush();
    while (1);
  }

  // Initiate SPI bus
  SPI.begin(); 

  // Initiate MFRC522     
  mfrc522.PCD_Init();
  delay(5);

  rtc.adjust(DateTime(F(__DATE__), F(__TIME__)));

  // Initiate starting postion of motor
  myservo.attach(7);
  myservo.write(300);

  nodemcu.begin(9600);
  delay(10);

  Serial.println("Program started");
}


void loop() {
  StaticJsonBuffer<1000> jsonBuffer;
  JsonObject& data = jsonBuffer.createObject();
  JsonObject& dataGet = jsonBuffer.parseObject(nodemcu);
  
  char time[10];
  char date[10];
  DateTime now = rtc.now();
  sprintf(time, "%02d:%02d:%02d",  now.hour(), now.minute(), now.second()); 
  sprintf(date, "%02d/%02d/%02d",  now.day(), now.month(), now.year()); 
  //Serial.println(time);
  //Serial.println(date);
  delay(10);

  // Look for new cards
  if ( ! mfrc522.PICC_IsNewCardPresent()) 
  {
    return;
  }
  // Select one of the cards
  if ( ! mfrc522.PICC_ReadCardSerial()) 
  {
    return;
  }

  // Read UID bytes
  String content = "";
  for (byte i = 0; i < mfrc522.uid.size; i++) {
    // Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " ");
    // Serial.print(mfrc522.uid.uidByte[i], HEX);
    content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));
    content.concat(String(mfrc522.uid.uidByte[i], HEX));
  }

  // Check if the scanned UID matches Baz UID
  if (content.substring(1) == BAZ_TAG) { 
    // Send Barry data to NodeMcu
    data["dog_present"] = "Barry";
    data["dog_time"] = time;
    data["dog_date"] = date;
    data.printTo(nodemcu);
    jsonBuffer.clear();
    delay(1000);

  } else {
    Serial.println("Not Baz");
    delay(1000); 
  }

  // Halt reading for a while to avoid multiple reads
  mfrc522.PICC_HaltA();
  
  // detect motor value and move if = 1
  int motor = dataGet["motor_on"];
  if (motor == 1){
    for (pos = 0; pos <= 50; pos++) {
    myservo.write(pos);  // Set the position of the servo
    delay(2);         // Wait for 10ms for the servo to process the command
    }
    for (pos = 50; pos >= 0; pos--) {
      myservo.write(pos);  // Set the position of the servo
      delay(2);         // Wait for 10ms for the servo to process the command
    }
    myservo.write(300);
  }
  delay(5);

  // Read water level sensor
  int water = analogRead(WATER_SENSOR_PIN);
  
  // Assign collected water sensor data to JSON Object
  data["water_time"] = time;
  data["water_date"] = date;
  data["current_water_val"] = water;
  
  // Send data to NodeMCU
  data.printTo(nodemcu);
  jsonBuffer.clear();

  delay(1000);
}